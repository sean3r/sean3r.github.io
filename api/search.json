[{"id":"6f6d7745e6b501295b3899496c58c2f3","title":"催化剂领域发明专利申请的撰写与创造性审查","content":"催化剂领域发明专利申请的撰写与创造性审查\n2015-04-20\n本文介绍了催化剂领域发明专利申请的撰写方式对其创造性判断的重要影响。作者认为在可预见性较低的催化剂领域，发明专利申请中记载的技术问题和技术效果是评价创造性的重要依据。本文通过分析三个实际案例的创造性审查过程，从不同的方面提出催化剂领域专利申请文件的撰写技巧。并指出申请人在专利申请撰写时即需进行充分的检索从而对发明的创造性做出预期、并根据该预期在申请文件中补充必要的关于技术问题和技术效果方面的内容，这能够为申请人在后续的实质审查过程中提供有利保障。\n《专利法》第22条第3款规定“创造性，是指与现有技术相比，该发明具有突出的实质性特点和显著的进步”。《专利审查指南》规定：在评价发明是否具备创造性时，审查员不仅要考虑发明的技术方案本身，而且还要考虑发明所属技术领域、所解决的技术问题和产生的技术效果，将发明作为一个整体看待。《专利审查指南》中关于“技术问题”有这样的规定：在审查中应当客观分析并确定发明实际解决的技术问题，发明实际解决的技术问题是指为获得更好的技术效果而需对最接近的现有技术进行改进的技术任务。在实际审查过程中，由于审查员所认定的最接近的现有技术可能不同于申请人在说明书中所描述的现有技术。\n《专利审查指南》中关于“技术效果”也进行了描述：在创造性的判断过程中，考虑发明的技术效果有利于正确评价发明的创造性。如果发明与现有技术相比具有预料不到的技术效果，则不必再怀疑其技术方案是否具有突出的实质性特点，可以确定发明具备创造性。但是，对于“预料不到的技术效果”的描述应当是明确并具有依据的。那么，在申请文件撰写时对于技术问题和技术效果应该有怎样的考虑呢？为此，笔者仅以在审查工作中接触较多的催化剂领域的发明专利申请为切入点，探讨在撰写催化剂专利申请文件时对于技术问题和技术效果该如何考虑。\n一、催化剂领域的专利申请特点\n近年来，随着催化剂的研究和产业化步伐日趋加快，催化剂领域的专利申请量快速增长，而催化剂本身的结构、物理化学性质、催化作用及其催化反应过程都是极其复杂的，因此，催化剂领域的发明专利申请具有学科渗透性强、可预见性低的特点。催化剂领域创造性的判断往往是专利审查工作的难点之一，针对催化剂领域发明专利申请的特点，其申请文件中涉及的所要解决的技术问题以及取得的技术效果是审查员判断创造性时需要着重考虑的内容，因此，这部分内容也当然地成为申请人撰写该领域申请文件时应该重点关注的内容。\n然而在多年的专利审查实践中，笔者注意到：由于催化剂领域发明专利申请撰写的缺陷，导致申请人在实质审查过程中，难以对发明申请做出有利的修改或者做出有理有据的意见陈述，最终难以获得专利权。而事实上，这样的未被授权的专利申请实质上是具有创造性的，而仅仅是由于申请文件撰写的先天的缺陷而导致了可能无法弥补的后果。因此，提高催化剂领域专利申请文件的撰写质量是必要的也是重要的。\n本文从创造性审查的角度出发，通过分析三个催化剂领域的实际案例，从三个不同的方面提出催化剂领域专利申请文件的撰写技巧。\n二、实际案例\n1、重视与发明专利的发明点相关的技术问题\n为了使专利权保护范围最大化，申请人通常会将保护范围最大的技术方案记载在发明专利申请中，并着重对该技术方案进行清楚、完整地撰写。具体到催化剂领域，申请人更希望获得对催化剂产品的保护，也相对重视催化剂产品权利要求的撰写。而对于有可能涉及发明实际发明点的催化剂的制备方法则往往忽略，要么没有将其写入权利要求，要么只是在申请文件中简单地撰写其制备方法。\n【案例1】权利要求1：一种用于正丁烯双键迁移制丁烯-2的镍基催化剂，以重量百分比计包括以下组分：\na)5～75％的镍或其氧化物；\nb)1～10％的钛或其氧化物；\nc)15～95％的载体氧化铝；\n本案的权利要求书中仅涉及镍基催化剂的产品权利要求，并未对催化剂的制备方法要求保护；本申请说明书中记载的所要解决的技术问题是提供一种具有正丁烯异构化率高、总烯烃收率高、耐硫性能高的催化剂。同时，在说明书的有益的技术效果部分有这样的涉及催化剂制备方法的记载：“本发明的镍基催化剂制备方法，在氧化铝溶胶中加入镍盐水溶液或镍氨络合液，经静止老化或加热分解络合镍离子得到镍铝凝胶，经焙烧、还原可得到Ni/Al2O3催化剂，镍离子吸附于高比表面积的氧化铝溶胶粒子，纳米溶胶粒子提供了大量的表面积以分散镍组分，得到高分散高活性的镍基催化剂，催化剂上的微孔提供了小晶粒镍粒子的“镶嵌空间”，束缚了镍粒子的迁移，提高了催化剂的稳定性”。\n同时，本案的实施例对权利要求1请求保护的包含Ni、Ti、氧化铝组分的催化剂的制备方法进行了详细记载，其包括具体的制备步骤，具体的原料，由点值限定的原料加入量和反应条件参数等。\n不难看出，本案的发明点实质在于催化剂的制备方法，该发明点实质所对应的技术问题是提供一种新的制备方法，即在氧化铝溶胶中添加活性组分经静止老化或加热分解得到催化剂前躯体凝胶，经焙烧、还原得到催化剂产品，采用该制备方法制备得到的催化剂具有优异的催化性能。但是，发明内容部分并未记载该技术问题，且对于制备方法的记载仅仅是简单的描述，其并不是完整的技术方案，也没有涉及引入另一活性组分Ti的步骤，更没有涉及活性组分Ti何时、以何种形式加入。\n审查员在第一次审查意见通知书中指出：权利要求1相对于对比文件1不具备创造性；申请人为了克服创造性的缺陷，对权利要求1进行修改，由于本申请催化剂的制备方法不同于对比文件1的制备方法，考虑将制备方法限定到权利要求中是常见的修改方式。\n就本案而言，说明书背景技术部分对于本发明的技术领域描述的足够详细，可以看出申请人对该技术领域的发展进行了充分的检索，同时，在发明的有益的技术效果部分也对本发明的发明点进行了充分的解释和说明。也就是说，申请人知晓本案的发明点在于催化剂的制备方法，但是，为了寻求最大的保护范围，申请人仅对涉及催化剂产品的技术方案进行了概括限定，没有对发明点实质所对应的技术问题进行深究，从而忽略了对涉及发明点实质的技术方案的考虑；因此，在撰写申请文件时，申请人没有将与发明点相关的技术问题写入申请文件中，更没有对涉及发明点实质的催化剂制备方法的技术方案进行完整的概括记载。\n对申请文件的修改应该符合《专利法》第33条的规定，本案的说明书发明内容部分并没有对催化剂的制备方法进行适度的概括，导致申请人在修改权利要求书时，只能选择对实施例中的具体的催化剂的制备方法进行概括后补入产品权利要求中，或直接将实施例中所记载的具体的制备方法补入产品权利要求中。由于催化剂领域的发明专利申请在实施例部分所记载的均为具体的产品以及参数，因此，采用概括的方式很容易造成修改超范围的问题，而采用将整体实施例补入权利要求中进行限定，则必然地会导致保护范围的大大缩小。\n为了避免上述问题，申请人在撰写申请文件时，应当首先考虑其发明点是什么，从发明点实质出发，寻找其真正解决的技术问题，从而将表明发明点的特征写入权利要求书或者说明书中，为后续的意见陈述或申请文件的修改留有充分的余地，保证获得合理的保护范围。\n因此，在撰写说明书时，不仅要对发明专利申请区别于现有技术的发明点实质有所把握，还应当对其后期的修改进行考虑，在撰写说明书的发明内容时，要善于将保护范围由点扩展到面，对涉及发明点实质的技术方案引起足够的重视。\n2、对于创造性判断具有重要作用的对比实施例\n催化剂领域的审查中，不同活性组分之间是否具有“协同作用”是判断发明创造性的重要判断依据。催化剂在化学组成、离子价态、酸碱性、晶体及表面结构、孔分布、机械强度以及最终催化剂的活性、选择性、寿命及成本高低均是“协同作用”的考虑因素。而这些考虑因素最直观的表达就是申请人所做的各种表征数据以及活性等性能测试的对比实施例。因此，在撰写说明书具体实施例时，申请人需要对上述具有表征“协同作用”的对比实施例引起重视。\n【案例2】：权利要求1：一种用于选择性催化还原氮氧化物的催化剂，其特征在于载体为TiO2，活性组分为Sb2O3 -V2O5 -Nb2O5复合氧化物。\n权利要求1与最接近的现有技术的区别在于权利要求1限定了加入的活性组分为Sb2O3 -V2O5 -Nb2O5氧化物，而对比文件1中为WO3- V2O5 -Nb2O5氧化物。对于上述区别技术特征，审查员又检索到了对比文件2，其公开了一种用于NH3-SCR去除氮氧化物的催化剂，发现在SO2存在条件下添加Sb的V2O5- TiO2催化剂活性比含W的V2O5- TiO2的催化活性更高，即Sb-V2O5/TiO2可以取代W-V2O5/TiO2提高催化剂活性并增强催化剂在低温下抗SO2的中毒性能；据此，审查员采用对比文件1结合对比文件2评述了本案权利要求1的创造性。\n申请人在答复审查意见通知书时指出“本申请的催化剂中，Sb与Nb，分别补充了NO选择性催化还原反应所需的催化剂两个基本性质，即：氧化还原性能及表面酸性，添加剂中的Sb能够优先提高催化剂的氧化还原性能，而Nb则能够提高催化剂表面酸性，增加催化剂对还原剂NH3的吸附能力，所以添加剂中的Sb和Nb是不可或缺的两个组分，两者的同时存在才能够提高催化剂的活性，使催化剂的活性显著提高，活性窗口加宽，二者具有协同作用。”但是，在原始申请的说明书实施例部分并未对该“协同作用”进行记载，更没有记载具体实验数据，同时，申请人的意见陈述也难以证明权利要求1具有创造性。\n相反，如果申请人在撰写申请文件之前，就对本发明的技术方案进行充分的检索，对技术方案的创造性做出合理预期，认识到本发明与现有技术的改进点在于同时使用了两种活性组分并产生了“协同效应”，将描述“协同效应”的具体实施例记载在说明书中，将更有利于申请人在创造性问题上的陈述说理。\n常见的描述“协同作用”的具体实施例包括对比例，具体到本案，申请人在撰写说明书实施例时，可以将同时添加Sb和Nb的催化剂与单独添加Sb或Nb的催化剂进行催化活性的比较，通过对比试验例来证明Sb2O3和Nb2O5发生了相互作用，而不是仅仅单独表现出其各自的性能，而且这种相互作用的物质再与V2O5发生协同效应，使催化剂的活性显著提高，活性窗口加宽。\n由此可见，在申请文件撰写之初，就需要对发明技术方案的创造性做出预期，通过在说明书中记载有效的对比实施例，不仅有利于实质审查，而且也为专利申请在后续的专利权保护时提供保障，更有利于专利权的稳定。\n3、发明获得的技术效果所对应的效果实施例\n通常，申请人在撰写说明书时，会在说明书的发明内容部分记载发明所取得的技术效果，或在答复审查意见通知书时，对发明所具有的技术效果进行详细的陈述，以通过上述关键性技术效果区别于现有技术，来证明发明具有创造性。但是，对于催化剂领域的申请来说，体现技术效果的有利载体是实验数据，因此，申请人在撰写说明书时，应当对上述关键性技术效果所对应的效果实施例有所考虑，而非仅仅是技术效果的简单记载。\n【案例3】权利要求1：一种可见光激发的光催化材料，包括Bi2WO6，其特征在于将Pd、Pt、Au、Ag、Cu或Ni中任意一种金属以硝酸盐的形式负载在Bi2WO6上。\n说明书实施例1记载了纯Bi2WO6的制备及其用于光催化抗菌活性达到95%以上；实施例2记载了不同量的Ag离子负载的Bi2WO6的制备及其用于光催化抗菌活性性能；实施例3和4分别记载了Ni和Cu离子负载的Bi2WO6的制备及其用于光催化抗菌性能。\n对比文件1公开了一种负载Ag的Bi2WO6可见光催化剂，为了克服新颖性和创造性的缺陷，申请人删除Pd、Pt、Au、Ag的技术方案，仅保留Cu和Ni的技术方案，并在意见陈述中指出： Ag对细菌的杀抑效果很好，但杀抑霉菌的效果较差，而Cu 和Ni杀抑霉菌的能力要高于Ag，因此，一般来说，Cu 和Ni作为活性组分负载到Bi2WO6上后，材料体系不仅具有良好的杀抑各种细菌的功能，同时还能有效地抑制霉菌、酵母菌的繁殖，对于那些灭菌要求较高的产品而言是有优势的，可全面杀抑多种有害微生物。\n但是，原说明书中并没有记载Cu 和Ni杀抑霉菌的能力要高于Ag的任何技术效果或数据，而只是记载了各自总体上的杀菌效果，同时，没有证据表明Cu和Ni杀抑霉菌的能力要高于Ag，因此，申请人的意见陈述难以证明权利要求1的创造性。\n相反的，对于该“杀抑霉菌”的技术效果，如果申请人在撰写申请文件时，就对该技术效果是否能够使发明具有创造性做出预期，并将证明其技术效果的试验数据记载在说明书具体实施例部分，那么，上述实验数据将作为有利证据以证实本发明的技术效果。\n同时，申请人还应当注意，对于申请文件中所记载的预料不到的技术效果应当是发明要求保护的技术方案所具有的，是在发明要求保护的整个范围内都可以达到的；也就是说，导致产生该预料不到的技术效果的技术特征也要记载在发明要求保护的技术方案中。\n另外，在说明书中记载技术效果对应的具体效果例还具有另一重要作用，当申请人需要提供对比试验效果的证据时，对比试验效果证据必须针对在原申请文件中明确记载且给出了相应试验数据的技术效果；也就是说，如果在原始申请中对所述技术效果的试验数据进行了记载，那么申请人就容易给出所述技术效果的对比试验效果，使得申请人在意见陈述书中能够给予更有利的证据。相反的，如果原说明书中没有效果试验证明发明某个方面或某种程度的技术效果，则申请人在申请日后或答复审查意见时提供的对比试验数据或效果实施例以证明上述技术效果是难以被审查员接受的。同时，还应当注意的是，如果说明书中仅对该技术效果给出了结论性或断言性的描述却没有相应的试验效果数据，那么容易导致其技术效果无法判断，从而无法对其创造性进行判断，最终使得专利权遭受损失。\n三、结论\n为了使发明专利申请满足创造性的规定或克服创造性的缺陷，申请人在专利申请撰写时，就需要对发明申请的技术领域进行充分的检索，从而对发明的创造性做出预期，并根据该预期在申请文件中补充必要的内容。这不仅有利于审查员认识到本申请的创造性所在，而且为申请人在后续的专利审批程序提供有利保障。\n以下是笔者对催化剂领域专利申请的撰写给出几点建议：\n（1）分析发明技术方案中的发明点实质，并对与发明点相关的技术问题进行探究，从而对涉及发明点实质的技术方案进行完整、清楚、适度的概括。在兼顾发明内容具有创造性的同时，获得最佳的专利权保护范围。\n（2）对发明的技术领域进行充分检索，判断技术方案对现有技术的贡献所在，尽可能寻找最接近的现有技术，采用对比实施例作为有利证据区别于现有技术，以证明发明相对于现有技术具有创造性，有利于审查员认识到本申请的创造性所在。\n（3）申请人在重视技术秘密保护的同时，也应当对发明创造性做出重要贡献的关键性技术效果进行记载，只有结论性或断言性的描述是不够的，还要对关键性技术效果所对应的效果实施例进行记载，其不仅为创造性判断提供有利证明，而且对于后续审查意见通知书的答复也提供了重要依据。\n李晶晶 国家知识产权局专利局专利审查协作北京中心；王成荫 国家知识产权局专利局专利审查协作北京中心发表\n来源：中国知识产权杂志\n","slug":"220619cuihuaji","date":"2022-06-19T09:47:58.000Z","categories_index":"","tags_index":"","author_index":"Sean Ho"},{"id":"8f43c01fe59990b8331a8f88732ed2ff","title":"搭建博客：GitHub Pages，Hexo，Aurora","content":"介绍\n本地系统 windows 10。博客使用 GitHub Pages 网站托管，Hexo 博客框架，Hexo 主题选用 Aurora。\n使用博客时，用Markdown编辑器写内容。hexo 会将 md 文件生成静态网页，并发布至 GitHub，通过 GitHub Pages 所给二级域名直接访问。\nGitHub Pages\n\n\n\n\n\n\n\n\n\nGitHub Pages is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process, and publishes a website.\nGit是一个分布式版本控制系统，而Github是一个集成了git的服务，它可以以网页或者客户端的形式，帮助用户把git本地的数据提交到远程的服务器里。\nHexo 博客框架\n\n\n\n\n\n\n\n\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n第一步\n\n\n下载 Node.js download；安装；选默认配置；打开命令行输入node -v看到版本号即安装无误；\n\n\n下载 Git download；默认配置安装；命令行 git --version，确认版本；\n\n\n安装完 Git 会得到 Git Bash 命令行工具；\n\n\nGit 是一个分布式版本控制系统，而 Github 是一个集成了 Git 的服务。Git 可以帮助用户把本地的数据提交到远程的服务器里；\n\n\n\n\n准备一个github.com账户，例如：用户名: zhangsan, email: zhangsan@abc.com\n\n\n建立博客\n\n\n新建文件夹作为博客的根目录，例如：d:\\myblog；\n\n\n打开 d:\\myblog目录，在文件夹空白区域右击选择 Git Bash Here；\n\n\n命令行：npm install hexo -cli -g;  安装 Hexo，其中参数 -g 是 global，全局安装；\n\n\n命令行：hexo -v；查看是否安装成功\n\n\n命令行：在d:\\myblog下，运行hexo init初始化；现在可以看到myblog目录下多了很多文件。\n\n\n命令行：hexo s；启动hexo博客服务。\n\n\n\n浏览器访问 http://localhost:4000/ 可以看到博客界面了。\n\n\n将本地博客同步至 Github.com\n\n\n登录 github.com;\n\n\n“github 首页 - New - create a new repository”，新建一个仓库；\n\n\nowner：zhangsan; //输入自己的用户名，最好和 github 用户名相同；\n\n\nrepository name：zhangsan；\n\n\nDescription：随便写；\n\n\n选中 public；\n\n\n选中 “Add a README file”；\n\n\n点击 “Create repository”。\n\n\n\n\n使用 ssh 生成密钥对，用以和本地连接；\n\n打开 “d:\\myblog” 文件夹，空白处右击鼠标，选择 “Git bash here”；\n命令行：ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;；新建密钥对；\n\n“Enter file in which to save the key”；直接回车，文件名默认为id_ras.pub。若此处输入了新文件名，后续需要调整路径。最终的结果，id_ras.pub应处于 “c:\\users\\用户名\\.ssh” 目录下；\n“Enter passphrase”；直接回车，则之后的ssh连接不再需要密码。\n\n\n\n\n\n公钥放至github\n\n登录 github.com；\n“点击自己头像 - setting - ssh and GPG keys”；\n选择 “New SSH Key”；将本地 id_ras.pub文件内容copy 至此，保存；\n\n\n\n在 Git Bash 中配置 github.com 账户信息\n\n\ngit config --global user.name \"zhangsan\"\ngit config --global user.email \"zhangsan@abc.com\"\n\n\n测试本地和 github.com 之间的连接；\n\n\nGit Bash命令行：ssh -T git@github.com；\n若成功，会显示：“Hi username, You’ve successfully authenticated, but GitHub does not provide shell access.”\n若报错：&quot; git@github.com: Permission denied ( publickey ) &quot;，应是id_ras.pub文件位置问题。\n\n\n\n\nHexo 配置修改\n\n\n文本编辑器打开 “d:\\myblog_config.yml” 文件\n\n\n“#deployment” 和 “#url” 部分，做如下修改：\n\n\n\n\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: 'git'\n  repo: git@github.com:zhangsan/zhangsan.github.io.git\n  branch: main\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as &#39;https:&#x2F;&#x2F;username.github.io&#x2F;project&#39;\nurl: https:&#x2F;&#x2F;zhangsan.github.io\n# 注意是https\n\n安装 hexo-deployer-git\n\nGit Bash 输入 npm install hexo-deployer-git --save；\n\n\n这样设置就做好了。之后使用下列命令将本地博客部署至 github.com；\n\nhexo clean #清除旧页面\nhexo g #生成新页面\nhexo d #本地同步至 GitHub Pages\n\n通过浏览器访问 “zhangsan.github.io” 。\n\n博客使用\n写博客，\nhexo new test  #生成一个新文件：\\source\\_posts\\test.md；\n重建页面并运行本地server\nhexo clean\nhexo g\nhexo s #本地服务器运行，即预览\n部署至 GitHub Pages\nhexo clean\nhexo g\nhexo d\n参考：hexo docs https://hexo.io/zh-cn/docs/github-pages.html\n写博客时，直接编辑test.md，或把md文件直接放入&quot;_post&quot;。\nhexo clean 会清除 db.json 和 public 所有内容，\nhexo g 会将source中所有的md文件转为html文件放至public 文件夹。\nHexo Aurora Theme设置\n安装 Aurora 主题包\n\n博客根目录下打开 git bash；\nnpm install hexo-theme-aurora --save；安装aurora主题；\n\n生成Aurora主题配置\n\n打开文件夹：d:\\myblog\\node_modules\\hexo-theme-aurora，找到_config.yml，更名为_config.aurora.yml；\n将 _config.aurora.yml 移动到根目录（这时根目录有_config.yml和_config.aurora.yml）；\n\n_config.yml修改\n修改 permalink 参数为 /post/:title.html\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as &#39;https:&#x2F;&#x2F;username.github.io&#x2F;project&#39;\nurl: https:&#x2F;&#x2F;tridiamond.tech\npermalink: &#x2F;post&#x2F;:title.html\npermalink_defaults:\npretty_urls:\n  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks\n  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks\n把 highlight 的启用改为 false\n把 prismjs 的启用改为 true\n把 prismjs 下的 preprocess 改为 false\nhighlight:\n  enable: false\n  line_number: true\n  auto_detect: false\n  tab_replace: &#39;&#39;\n  wrap: true\n  hljs: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  tab_replace: &#39;&#39;\n\ntheme 改为 Aurora\n# Extensions\n## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;\n## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;\ntheme: aurora\n\n重新生成并启动本地服务器\nhexo clean &amp; hexo g &amp; hexo server\n通过 https://localhost:4000 访问你的博客。\nGitalk 评论组件\nGitalk 在_config.aurora.yml中设置。其中，clientID 和 clientsecret 需要从github获取，步骤如下：\n\n登录github，点击头像，选择 setting；\n选 developer settings；\n选 “OAuth Apps - New OAuth App”；\nApplication name：随便取，\nhomepage url：填 https://zhangsan.github.io\ndescription 随便写\nauthorization callback URL：此处同homepage url, 注意，都是https\n点 “register application”；\n记录下 clientID 和 clientsecret，对应地填到 _config.aurora.yml 里。\n\n设置完，重建服务器后，须先登录 github.com 确认绑定，之后就可以正常评论了。\nGitalk 仅支持 GitHub 账户登录后进行评论。\n其他 gitalk 参数解释见官方文档：https://aurora.tridiamond.tech/guide/plugins.html#gitalk\n参考：\nHexo themes portal: https://hexo.io/themes/index.html\nAurora安装配置指南：https://aurora.tridiamond.tech/zh/guide/getting-started.html\n","slug":"220321-githubpages","date":"2022-03-21T14:36:03.000Z","categories_index":"","tags_index":"","author_index":"Sean Ho"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick Start\nCreate a new post\n$ hexo new \"My New Post\"\nMore info: Writing\nRun server\n$ hexo server\nMore info: Server\nGenerate static files\n$ hexo generate\nMore info: Generating\nDeploy to remote sites\n$ hexo deploy\nMore info: Deployment\n","slug":"hello-world","date":"2022-03-21T02:46:03.480Z","categories_index":"","tags_index":"","author_index":"Sean Ho"}]